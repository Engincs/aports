From 88227105b8be280a69cdcabcee7a440885fc10f5 Mon Sep 17 00:00:00 2001
From: Steve Gilvarry <SteveGilvarry@users.noreply.github.com>
Date: Sat, 14 Sep 2024 11:06:55 +1000
Subject: [PATCH] Removing avcodec_close, avcodec_free_context is replacement
 and been around since 2014, so should be no reason to version test.

---
 src/zm_ffmpeg.cpp             | 2 +-
 src/zm_ffmpeg_camera.cpp      | 4 ++--
 src/zm_ffmpeg_input.cpp       | 2 +-
 src/zm_mpeg.cpp               | 3 ++-
 src/zm_remote_camera_rtsp.cpp | 3 ++-
 src/zm_videostore.cpp         | 6 +++---
 6 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/src/zm_ffmpeg.cpp b/src/zm_ffmpeg.cpp
index f9f2a1919e6..ae30ffd7717 100644
--- a/src/zm_ffmpeg.cpp
+++ b/src/zm_ffmpeg.cpp
@@ -440,7 +440,7 @@ int zm_send_frame_receive_packet(AVCodecContext *ctx, AVFrame *frame, AVPacket &
 
 void zm_free_codec(AVCodecContext **ctx) {
   if (*ctx) {
-    avcodec_close(*ctx);
+    //avcodec_close(*ctx);
     // We allocate and copy in newer ffmpeg, so need to free it
     avcodec_free_context(ctx);
     *ctx = nullptr;
diff --git a/src/zm_ffmpeg_camera.cpp b/src/zm_ffmpeg_camera.cpp
index 7ceeb4c7e49..a20090cfb4d 100644
--- a/src/zm_ffmpeg_camera.cpp
+++ b/src/zm_ffmpeg_camera.cpp
@@ -607,14 +607,14 @@ int FfmpegCamera::Close() {
   mLastAudioPTS = 0;
 
   if (mVideoCodecContext) {
-    avcodec_close(mVideoCodecContext);
+    //avcodec_close(mVideoCodecContext);
     avcodec_free_context(&mVideoCodecContext);
     mVideoCodecContext = nullptr;
   }
 
   if (mAudioCodecContext and !mSecondInput) {
     // If second input, then these will get freed in FFmpeg_Input's destructor
-    avcodec_close(mAudioCodecContext);
+    //avcodec_close(mAudioCodecContext);
     avcodec_free_context(&mAudioCodecContext);
     mAudioCodecContext = nullptr;
   }
diff --git a/src/zm_ffmpeg_input.cpp b/src/zm_ffmpeg_input.cpp
index 2f18158cde9..bf68114d92f 100644
--- a/src/zm_ffmpeg_input.cpp
+++ b/src/zm_ffmpeg_input.cpp
@@ -123,7 +123,7 @@ int FFmpeg_Input::Open(const char *filepath) {
 int FFmpeg_Input::Close( ) {
   if (streams) {
     for (unsigned int i = 0; i < input_format_context->nb_streams; i += 1) {
-      avcodec_close(streams[i].context);
+      //avcodec_close(streams[i].context);
       avcodec_free_context(&streams[i].context);
       streams[i].context = nullptr;
     }
diff --git a/src/zm_mpeg.cpp b/src/zm_mpeg.cpp
index c4838d3e288..a8376657194 100644
--- a/src/zm_mpeg.cpp
+++ b/src/zm_mpeg.cpp
@@ -369,7 +369,8 @@ VideoStream::~VideoStream( ) {
 
   /* close each codec */
   if ( ost ) {
-    avcodec_close( codec_context );
+    //avcodec_close( codec_context );
+    avcodec_free_context(&codec_context);
     av_free( video_outbuf );
   }
 
diff --git a/src/zm_remote_camera_rtsp.cpp b/src/zm_remote_camera_rtsp.cpp
index f5414f87bb4..501d9aa49cb 100644
--- a/src/zm_remote_camera_rtsp.cpp
+++ b/src/zm_remote_camera_rtsp.cpp
@@ -86,7 +86,8 @@ RemoteCameraRtsp::RemoteCameraRtsp(
 RemoteCameraRtsp::~RemoteCameraRtsp() {
 
   if ( mVideoCodecContext ) {
-    avcodec_close(mVideoCodecContext);
+    //avcodec_close(mVideoCodecContext);
+    avcodec_free_context(&mVideoCodecContext);
     mVideoCodecContext = nullptr; // Freed by avformat_free_context in the destructor of RtspThread class
   }
   // Is allocated in RTSPThread and is free there as well
diff --git a/src/zm_videostore.cpp b/src/zm_videostore.cpp
index 2d561a59abc..f363f9f4bc0 100644
--- a/src/zm_videostore.cpp
+++ b/src/zm_videostore.cpp
@@ -746,7 +746,7 @@ VideoStore::~VideoStore() {
   video_in_ctx = nullptr;
 
   if (video_out_ctx) {
-    avcodec_close(video_out_ctx);
+    //avcodec_close(video_out_ctx);
     Debug(3, "Freeing video_out_ctx");
     avcodec_free_context(&video_out_ctx);
     if (hw_device_ctx) {
@@ -758,13 +758,13 @@ VideoStore::~VideoStore() {
   if (audio_out_stream) {
     audio_in_codec = nullptr;
     if (audio_in_ctx) {
-      avcodec_close(audio_in_ctx);
+      //avcodec_close(audio_in_ctx);
       avcodec_free_context(&audio_in_ctx);
     }
 
     if (audio_out_ctx) {
       Debug(4, "Success closing audio_out_ctx");
-      avcodec_close(audio_out_ctx);
+      //avcodec_close(audio_out_ctx);
       avcodec_free_context(&audio_out_ctx);
     }
 
