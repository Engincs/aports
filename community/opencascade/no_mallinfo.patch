--- a/src/OSD/OSD_MemInfo.cxx
+++ b/src/OSD/OSD_MemInfo.cxx
@@ -31,6 +31,9 @@
   #include <malloc.h>
 #endif
 
+#include <sys/time.h>
+#include <sys/resource.h>
+
 #include <OSD_MemInfo.hxx>
 
 #if defined(__EMSCRIPTEN__)
@@ -144,18 +147,22 @@ void OSD_MemInfo::Update()
   if (IsActive(MemHeapUsage) || IsActive(MemWorkingSet) || IsActive(MemWorkingSetPeak))
   {
     // /proc/%d/status is not emulated - get more info from mallinfo()
-    const struct mallinfo aMI = mallinfo();
+    // mallinfo() not available with musl. We use getrusage to approximate it
+    // with the maximum resident set size
+    struct rusage ru = { .ru_maxrss = 0 };
+    getrusage(RUSAGE_SELF, &ru);
     if (IsActive(MemHeapUsage))
     {
-      myCounters[MemHeapUsage] = aMI.uordblks;
+      myCounters[MemHeapUsage] = ru.ru_maxrss;
     }
     if (IsActive(MemWorkingSet))
     {
-      myCounters[MemWorkingSet] = aMI.uordblks;
+      myCounters[MemWorkingSet] = ru.ru_maxrss;
     }
     if (IsActive(MemWorkingSetPeak))
     {
-      myCounters[MemWorkingSetPeak] = aMI.usmblks;
+      //usmblks is always 0
+      myCounters[MemWorkingSetPeak] = 0;
     }
   }
   if (IsActive(MemVirtual))
@@ -165,23 +172,9 @@ void OSD_MemInfo::Update()
   #elif (defined(__linux__) || defined(__linux))
   if (IsActive(MemHeapUsage))
   {
-    #if defined(__GLIBC__)
-      #define HAS_MALLINFO
-      #if defined(__GLIBC_PREREQ) && __GLIBC_PREREQ(2, 33)
-        #define HAS_MALLINFO2
-      #endif
-    #endif
-
-    #ifdef HAS_MALLINFO
-      #ifdef HAS_MALLINFO2
-    const struct mallinfo2 aMI = mallinfo2();
-      #else
-    const struct mallinfo aMI = mallinfo();
-      #endif
-    myCounters[MemHeapUsage] = aMI.uordblks;
-    #else
-    myCounters[MemHeapUsage] = 0;
-    #endif
+    struct rusage ru = { .ru_maxrss = 0 };
+    getrusage(RUSAGE_SELF, &ru);
+    myCounters[MemHeapUsage] = ru.ru_maxrss;
   }
 
   if (!IsActive(MemVirtual) && !IsActive(MemWorkingSet) && !IsActive(MemWorkingSetPeak)
