# Contributor: Carlo Landmeter <clandmeter@alpinelinux.org>
# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=chromium
pkgver=105.0.5195.102
pkgrel=1
pkgdesc="Chromium web browser"
url="https://www.chromium.org/Home"
arch="aarch64 x86_64"	# x86: ./v8_context_snapshot_generator segfaults
license="BSD-3-Clause"
makedepends="
	alsa-lib-dev
	aom-dev
	bash
	bison
	bsd-compat-headers
	brotli-dev
	bzip2-dev
	cairo-dev
	clang-dev
	compiler-rt
	cups-dev
	curl-dev
	dav1d-dev
	dbus-glib-dev
	elfutils
	elfutils-dev
	eudev-dev
	ffmpeg-dev
	findutils
	flac-dev
	flex
	freetype-dev
	gn
	gperf
	gtk+3.0-dev
	gzip
	harfbuzz-dev
	hunspell-dev
	hwids-usb
	java-jdk
	jpeg-dev
	jsoncpp-dev
	krb5-dev
	lcms2-dev
	libavif-dev
	libbsd-dev
	libcap-dev
	libevent-dev
	libexif-dev
	libgcrypt-dev
	libjpeg-turbo-dev
	libpng-dev
	libusb-dev
	libva-dev
	libwebp-dev
	libxcomposite-dev
	libxcursor-dev
	libxinerama-dev
	libxml2-dev
	libxrandr-dev
	libxscrnsaver-dev
	libxslt-dev
	linux-headers
	lld
	llvm
	mesa-dev
	minizip-dev
	ninja
	nodejs
	nss-dev
	opus-dev
	pciutils-dev
	perl
	pipewire-dev
	pulseaudio-dev
	py3-setuptools
	python3
	re2-dev
	snappy-dev
	speex-dev
	sqlite-dev
	woff2-dev
	xcb-proto
	zlib-dev
	"
# explicit depends for --headless
# XXX: eudev-libs replaced by so:libudev.so.1 to allow installation with libudev-zero
# take care if libudev.so ever updates somajor..
depends="xdg-utils so:libudev.so.1 gtk+3.0 font-opensans"
options="suid !check" # broken
subpackages="
	$pkgname-dbg
	$pkgname-chromedriver
	$pkgname-doc
	$pkgname-lang
	$pkgname-swiftshader
	"
source="https://commondatastorage.googleapis.com/chromium-browser-official/chromium-$pkgver.tar.xz
	test_fonts-cd96fc55dc243f6c6f4cb63ad117cad6cd48dceb.tar.gz::https://chromium-fonts.storage.googleapis.com/cd96fc55dc243f6c6f4cb63ad117cad6cd48dceb
	chromium-launcher.sh
	chromium.conf
	google-api.keys

	angle-wayland-include.patch
	canonicalize-file-name.patch
	chromium-105-math-ceilf.patch
	chromium-105-bitmap-include.patch
	chromium-105-browser-include.patch
	chromium-VirtualCursor-standard-layout.patch
	chromium-revert-drop-of-system-java.patch
	chromium-use-alpine-target.patch
	credentials-sys-types-header.patch
	default-pthread-stacksize.patch
	dns-resolver.patch
	fix-crashpad.patch
	fix-missing-cstdint-include-musl.patch
	fix-narrowing-cast.patch
	gdbinit.patch
	lto-core-count.patch
	memory-tagging-arm64.patch
	musl-sandbox.patch
	musl-tid-caching.patch
	musl-v8-monotonic-pthread-cont_timedwait.patch
	no-execinfo.patch
	no-glibc-version.patch
	no-mallinfo.patch
	no-res-ninit-nclose.patch
	no-stat-redefine.patch
	partition-atfork.patch
	push-back-nullptr.patch
	quiche-arena-size.patch
	roll-src-third_party-ffmpeg.patch
	scoped-file-no-close.patch
	system-zlib.patch
	temp-failure-retry.patch
	wtf-stacksize.patch
"

# backwards compat (merged into primary)
provides="$pkgname-angle=$pkgver-r$pkgrel"

# secfixes:
#   103.0.5060.134-r0:
#     - CVE-2022-2163
#     - CVE-2022-2477
#     - CVE-2022-2478
#     - CVE-2022-2479
#     - CVE-2022-2480
#     - CVE-2022-2481
#   103.0.5060.114-r0:
#     - CVE-2022-2294
#     - CVE-2022-2295
#     - CVE-2022-2296
#   103.0.5060.53-r0:
#     - CVE-2022-2156
#     - CVE-2022-2157
#     - CVE-2022-2158
#     - CVE-2022-2160
#     - CVE-2022-2161
#     - CVE-2022-2162
#     - CVE-2022-2163
#     - CVE-2022-2164
#     - CVE-2022-2165
#   102.0.5005.61-r0:
#     - CVE-2022-1853
#     - CVE-2022-1854
#     - CVE-2022-1855
#     - CVE-2022-1856
#     - CVE-2022-1857
#     - CVE-2022-1858
#     - CVE-2022-1859
#     - CVE-2022-1860
#     - CVE-2022-1861
#     - CVE-2022-1862
#     - CVE-2022-1863
#     - CVE-2022-1864
#     - CVE-2022-1865
#     - CVE-2022-1866
#     - CVE-2022-1867
#     - CVE-2022-1868
#     - CVE-2022-1869
#     - CVE-2022-1870
#     - CVE-2022-1871
#     - CVE-2022-1872
#     - CVE-2022-1873
#     - CVE-2022-1874
#     - CVE-2022-1875
#     - CVE-2022-1876
#   101.0.4951.64-r0:
#     - CVE-2022-1633
#     - CVE-2022-1634
#     - CVE-2022-1635
#     - CVE-2022-1636
#     - CVE-2022-1637
#     - CVE-2022-1638
#     - CVE-2022-1639
#     - CVE-2022-1640
#     - CVE-2022-1641
#   101.0.4951.54-r0:
#     - CVE-2022-1477
#     - CVE-2022-1478
#     - CVE-2022-1479
#     - CVE-2022-1481
#     - CVE-2022-1482
#     - CVE-2022-1483
#     - CVE-2022-1484
#     - CVE-2022-1485
#     - CVE-2022-1486
#     - CVE-2022-1487
#     - CVE-2022-1488
#     - CVE-2022-1489
#     - CVE-2022-1490
#     - CVE-2022-1491
#     - CVE-2022-1492
#     - CVE-2022-1493
#     - CVE-2022-1494
#     - CVE-2022-1495
#     - CVE-2022-1496
#     - CVE-2022-1497
#     - CVE-2022-1498
#     - CVE-2022-1499
#     - CVE-2022-1500
#     - CVE-2022-1501
#   100.0.4896.127-r0:
#     - CVE-2022-1364
#   99.0.4844.84-r0:
#     - CVE-2022-1096
#   98.0.4758.102-r0:
#     - CVE-2022-0452
#     - CVE-2022-0453
#     - CVE-2022-0454
#     - CVE-2022-0455
#     - CVE-2022-0456
#     - CVE-2022-0457
#     - CVE-2022-0458
#     - CVE-2022-0459
#     - CVE-2022-0460
#     - CVE-2022-0461
#     - CVE-2022-0462
#     - CVE-2022-0463
#     - CVE-2022-0464
#     - CVE-2022-0465
#     - CVE-2022-0466
#     - CVE-2022-0467
#     - CVE-2022-0468
#     - CVE-2022-0469
#     - CVE-2022-0470
#     - CVE-2022-0603
#     - CVE-2022-0604
#     - CVE-2022-0605
#     - CVE-2022-0606
#     - CVE-2022-0607
#     - CVE-2022-0608
#     - CVE-2022-0609
#     - CVE-2022-0610
#   93.0.4577.82-r0:
#     - CVE-2021-30625
#     - CVE-2021-30626
#     - CVE-2021-30627
#     - CVE-2021-30628
#     - CVE-2021-30629
#     - CVE-2021-30630
#     - CVE-2021-30631
#     - CVE-2021-30632
#     - CVE-2021-30633
#   93.0.4577.63-r0:
#     - CVE-2021-30606
#     - CVE-2021-30607
#     - CVE-2021-30608
#     - CVE-2021-30609
#     - CVE-2021-30610
#     - CVE-2021-30611
#     - CVE-2021-30612
#     - CVE-2021-30613
#     - CVE-2021-30614
#     - CVE-2021-30615
#     - CVE-2021-30616
#     - CVE-2021-30617
#     - CVE-2021-30618
#     - CVE-2021-30619
#     - CVE-2021-30620
#     - CVE-2021-30621
#     - CVE-2021-30622
#     - CVE-2021-30623
#     - CVE-2021-30624
#   92.0.4515.159-r0:
#     - CVE-2021-30598
#     - CVE-2021-30599
#     - CVE-2021-30600
#     - CVE-2021-30601
#     - CVE-2021-30602
#     - CVE-2021-30603
#     - CVE-2021-30604
#     - CVE-2021-30590
#     - CVE-2021-30591
#     - CVE-2021-30592
#     - CVE-2021-30593
#     - CVE-2021-30594
#     - CVE-2021-30596
#     - CVE-2021-30597
#   92.0.4515.107-r0:
#     - CVE-2021-30565
#     - CVE-2021-30566
#     - CVE-2021-30567
#     - CVE-2021-30568
#     - CVE-2021-30569
#     - CVE-2021-30571
#     - CVE-2021-30572
#     - CVE-2021-30573
#     - CVE-2021-30574
#     - CVE-2021-30575
#     - CVE-2021-30576
#     - CVE-2021-30577
#     - CVE-2021-30578
#     - CVE-2021-30579
#     - CVE-2021-30580
#     - CVE-2021-30581
#     - CVE-2021-30582
#     - CVE-2021-30583
#     - CVE-2021-30584
#     - CVE-2021-30585
#     - CVE-2021-30586
#     - CVE-2021-30587
#     - CVE-2021-30588
#     - CVE-2021-30589
#   91.0.4472.164-r0:
#     - CVE-2021-30559
#     - CVE-2021-30541
#     - CVE-2021-30560
#     - CVE-2021-30561
#     - CVE-2021-30562
#     - CVE-2021-30563
#     - CVE-2021-30564
#   91.0.4472.114-r0:
#     - CVE-2021-30554
#     - CVE-2021-30555
#     - CVE-2021-30556
#     - CVE-2021-30557
#   91.0.4472.101-r0:
#     - CVE-2021-30544
#     - CVE-2021-30545
#     - CVE-2021-30546
#     - CVE-2021-30547
#     - CVE-2021-30548
#     - CVE-2021-30549
#     - CVE-2021-30550
#     - CVE-2021-30551
#     - CVE-2021-30552
#     - CVE-2021-30553
#   91.0.4472.77-r0:
#     - CVE-2021-30521
#     - CVE-2021-30522
#     - CVE-2021-30523
#     - CVE-2021-30524
#     - CVE-2021-30525
#     - CVE-2021-30526
#     - CVE-2021-30527
#     - CVE-2021-30528
#     - CVE-2021-30529
#     - CVE-2021-30530
#     - CVE-2021-30531
#     - CVE-2021-30532
#     - CVE-2021-30533
#     - CVE-2021-30534
#     - CVE-2021-30535
#     - CVE-2021-30536
#     - CVE-2021-30537
#     - CVE-2021-30538
#     - CVE-2021-30539
#     - CVE-2021-30540
#   90.0.4430.72-r0:
#     - CVE-2021-21201
#     - CVE-2021-21202
#     - CVE-2021-21203
#     - CVE-2021-21204
#     - CVE-2021-21205
#     - CVE-2021-21221
#     - CVE-2021-21207
#     - CVE-2021-21208
#     - CVE-2021-21209
#     - CVE-2021-21210
#     - CVE-2021-21211
#     - CVE-2021-21212
#     - CVE-2021-21213
#     - CVE-2021-21214
#     - CVE-2021-21215
#     - CVE-2021-21216
#     - CVE-2021-21217
#     - CVE-2021-21218
#     - CVE-2021-21219
#   89.0.4389.128-r0:
#     - CVE-2021-21206
#     - CVE-2021-21220
#   89.0.4389.114-r0:
#     - CVE-2021-21194
#     - CVE-2021-21195
#     - CVE-2021-21196
#     - CVE-2021-21197
#     - CVE-2021-21198
#     - CVE-2021-21199
#   89.0.4389.90-r0:
#     - CVE-2021-21191
#     - CVE-2021-21192
#     - CVE-2021-21193
#   89.0.4389.72-r0:
#     - CVE-2021-21158
#     - CVE-2021-21159
#     - CVE-2021-21160
#     - CVE-2021-21161
#     - CVE-2021-21162
#     - CVE-2021-21163
#     - CVE-2021-21164
#     - CVE-2021-21165
#     - CVE-2021-21166
#     - CVE-2021-21167
#     - CVE-2021-21168
#     - CVE-2021-21169
#     - CVE-2021-21170
#     - CVE-2021-21171
#     - CVE-2021-21172
#     - CVE-2021-21173
#     - CVE-2021-21174
#     - CVE-2021-21175
#     - CVE-2021-21176
#     - CVE-2021-21177
#     - CVE-2021-21178
#     - CVE-2021-21179
#     - CVE-2021-21180
#     - CVE-2020-27844
#     - CVE-2021-21181
#     - CVE-2021-21182
#     - CVE-2021-21183
#     - CVE-2021-21184
#     - CVE-2021-21185
#     - CVE-2021-21186
#     - CVE-2021-21187
#     - CVE-2021-21188
#     - CVE-2021-21189
#     - CVE-2021-21190
#   83.0.4103.116-r0:
#     - CVE-2020-6505
#     - CVE-2020-6506
#     - CVE-2020-6507
#     - CVE-2020-6509
#   72.0.3626.121-r0:
#     - CVE-2019-5786

upstream_version() {
	curl --silent https://omahaproxy.appspot.com/all \
		| awk -F, '$1 == "linux" && $2 == "stable" {print $3}'
}

prepare() {
	default_prepare

	cd "$srcdir"/"chromium-$pkgver"

	mv ../test_fonts/ ./third_party/test_fonts/

	# https://groups.google.com/a/chromium.org/d/topic/chromium-packagers/9JX1N2nf4PU/discussion
	touch chrome/test/data/webui/i18n_process_css_test.html
	# Use the file at run time instead of effectively compiling it in
	sed 's|//third_party/usb_ids/usb.ids|/usr/share/hwdata/usb.ids|g' \
		-i services/device/public/cpp/usb/BUILD.gn

	mkdir -p third_party/node/linux/node-linux-x64/bin
	ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/

	# reusable system library settings
	local use_system="
		brotli
		dav1d
		ffmpeg
		flac
		fontconfig
		freetype
		harfbuzz-ng
		icu
		jsoncpp
		libaom
		libavif
		libdrm
		libevent
		libjpeg
		libpng
		libwebp
		libxml
		libxslt
		opus
		re2
		snappy
		woff2
		zlib
		"
	for _lib in $use_system libjpeg_turbo; do
		msg "Removing buildscripts for system provided $_lib"
		find . -type f -path "*third_party/$_lib/*" \
			\! -path "*third_party/$_lib/chromium/*" \
			\! -path "*third_party/$_lib/google/*" \
			\! -path './base/third_party/icu/*' \
			\! -path './third_party/libxml/*' \
			\! -path './third_party/pdfium/third_party/freetype/include/pstables.h' \
			\! -path './third_party/harfbuzz-ng/utils/hb_scoped.h' \
			\! -path './third_party/crashpad/crashpad/third_party/zlib/zlib_crashpad.h' \
			\! -regex '.*\.\(gn\|gni\|isolate\|py\)' \
			-delete
	done

	msg "Replacing gn files"
	python3 build/linux/unbundle/replace_gn_files.py --system-libraries \
		$use_system
	python3 third_party/libaddressinput/chromium/tools/update-strings.py

	# prevent annoying errors when regenerating gni
	sed -i 's,^update_readme$,#update_readme,' \
		third_party/libvpx/generate_gni.sh

	# allow system dependencies in "official builds"
	sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
		tools/generate_shim_headers/generate_shim_headers.py

	# https://crbug.com/893950
	sed -i -e 's/\<xmlMalloc\>/malloc/' -e 's/\<xmlFree\>/free/' \
		third_party/blink/renderer/core/xml/*.cc \
		third_party/blink/renderer/core/xml/parser/xml_document_parser.cc \
		third_party/libxml/chromium/*.cc \
		third_party/maldoca/src/maldoca/ole/oss_utils.h
}

_buildtype=Release

build() {
	##############################################################
	# Please dont use these keys outside of Alpine Linux project #
	# You can create your own at:                                #
	# http://www.chromium.org/developers/how-tos/api-keys        #
	##############################################################
	local _google_api_key _google_default_client_id _google_default_client_secret
	eval "$(base64 -d < $srcdir/google-api.keys)"

	# silence really annoying warning on every compiler invocation, reproducible extras
	export CFLAGS="${CFLAGS/-g/} -O2 -Wno-unknown-warning-option -Wno-builtin-macro-redefined"
	export CXXFLAGS="${CXXFLAGS/-g/} -O2 -Wno-unknown-warning-option -Wno-builtin-macro-redefined"
	export CPPFLAGS="${CPPFLAGS/-g/} -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__="

	export AR="llvm-ar"
	export CC="clang"
	export CXX="clang++"
	export NM="llvm-nm"

	msg "Configuring build"

	# this should be at 0 for -dbg too. change it for local debugging only
	local symbol_level=0

	local gn_config="
		blink_enable_generated_code_formatting=false
		chrome_pgo_phase=0
		clang_use_chrome_plugins=false
		custom_toolchain=\"//build/toolchain/linux/unbundle:default\"
		disable_fieldtrial_testing_config=true
		enable_hangout_services_extension=true
		enable_nacl=false
		enable_stripping=false
		enable_vr=false
		fatal_linker_warnings=false
		ffmpeg_branding=\"Chrome\"
		google_api_key=\"$_google_api_key\"
		google_default_client_id=\"$_google_default_client_id\"
		google_default_client_secret=\"$_google_default_client_secret\"
		host_toolchain=\"//build/toolchain/linux/unbundle:default\"
		icu_use_data_file=true
		is_cfi=false
		is_component_ffmpeg=true
		is_debug=false
		is_official_build=true
		link_pulseaudio=true
		proprietary_codecs=true
		rtc_link_pipewire=true
		rtc_use_pipewire=true
		symbol_level=$symbol_level
		treat_warnings_as_errors=false
		use_custom_libcxx=false
		use_gnome_keyring=false
		use_pulseaudio=true
		use_sysroot=false
		use_system_freetype=true
		use_system_harfbuzz=true
		use_system_lcms2=true
		use_system_libdrm=true
		use_system_libjpeg=true
		use_system_libpng=true
		use_system_wayland_scanner=true
		use_system_zlib=true
		use_vaapi=true
	"

	gn gen out/$_buildtype \
		--args="$(echo $gn_config)" \
		--export-compile-commands

	msg "Ninja turtles GO!"

	# final link needs lots of file descriptors
	ulimit -n 4096

	ninja -C out/$_buildtype \
		chrome \
		chrome_sandbox \
		chromedriver.unstripped \
		chrome_crashpad_handler

	if [ -n "$CHECK" ]; then
		ninja -C out/$_buildtype \
			base_unittests \
			base_util_unittests \
			sandbox_linux_unittests \
			chromedriver_unittests \
			crypto_unittests \
			skia_unittests \
			blink_common_unittests \
			ozone_unittests \
			ozone_x11_unittests \
			ozone_gl_unittests \
			absl_hardening_tests \
			# angle_unittests \
			blink_heap_unittests \
			# blink_platform_unittests \
			boringssl_crypto_tests \
			boringssl_ssl_tests \
			cast_unittests \
			capture_unittests \
			# components_browsertests \
			# components_unittests \
			# content_browsertests \
			# content_unittests \
			# crashpad_tests \
			events_unittests \
			gcm_unit_tests \
			gin_unittests \
			google_apis_unittests \
			gpu_unittests \
			gwp_asan_unittests \
			ipc_tests \
			jingle_unittests \
			latency_unittests \
			libjingle_xmpp_unittests \
			liburlpattern_unittests \
			media_blink_unittests \
			media_unittests \
			midi_unittests \
			mojo_unittests \
			net_unittests \
			# cc_unittests \
			# blink_unittests \
			perfetto_unittests \
			# services_unittests \
			shell_dialogs_unittests \
			sql_unittests \
			storage_unittests \
			ui_base_unittests \
			ui_touch_selection_unittests \
			url_unittests \
			# webkit_unit_tests \
			wtf_unittests \
			zlib_unittests
	fi
}

check() {
	out/$_buildtype/base_unittests
	out/$_buildtype/base_util_unittests
	out/$_buildtype/sandbox_linux_unittests # broken + does not compile
	out/$_buildtype/chromedriver_unittests
	out/$_buildtype/crypto_unittests
	out/$_buildtype/skia_unittests
	out/$_buildtype/ozone_unittests
	out/$_buildtype/ozone_x11_unittests # ?
	out/$_buildtype/ozone_gl_unittests # broken
	out/$_buildtype/absl_hardening_tests
	# out/$_buildtype/angle_unittests # broken / does not compile
	out/$_buildtype/blink_common_unittests
	out/$_buildtype/blink_heap_unittests
	# out/$_buildtype/blink_platform_unittests # broken / does not compile
	out/$_buildtype/boringssl_crypto_tests
	out/$_buildtype/boringssl_ssl_tests
	out/$_buildtype/cast_unittests
	out/$_buildtype/capture_unittests --gtest_filter=-*UsingRealWebcam* # broken
	# out/$_buildtype/components_browsertests # broken / does not compile
	# out/$_buildtype/components_unittests # broken / does not compile
	# out/$_buildtype/content_browsertests # broken / does not compile
	# out/$_buildtype/content_unittests # broken / does not compile
	# out/$_buildtype/crashpad_tests # broken / does not compile
	out/$_buildtype/events_unittests
	out/$_buildtype/gcm_unit_tests
	out/$_buildtype/gin_unittests # ?
	out/$_buildtype/google_apis_unittests
	out/$_buildtype/gpu_unittests
	out/$_buildtype/gwp_asan_unittests # broken / required?
	out/$_buildtype/ipc_tests
	out/$_buildtype/jingle_unittests
	out/$_buildtype/latency_unittests
	out/$_buildtype/libjingle_xmpp_unittests
	out/$_buildtype/liburlpattern_unittests
	out/$_buildtype/media_blink_unittests # broken
	out/$_buildtype/media_unittests # broken
	out/$_buildtype/midi_unittests
	out/$_buildtype/mojo_unittests
	out/$_buildtype/net_unittests # broken
	# out/$_buildtype/cc_unittests # broken / does not compile
	# out/$_buildtype/blink_unittests # broken / does not compile
	out/$_buildtype/perfetto_unittests # ?
	# out/$_buildtype/services_unittests # broken / does not compile
	out/$_buildtype/shell_dialogs_unittests
	out/$_buildtype/sql_unittests
	out/$_buildtype/storage_unittests
	out/$_buildtype/ui_base_unittests # ok
	out/$_buildtype/ui_touch_selection_unittests
	out/$_buildtype/url_unittests
	# out/$_buildtype/webkit_unit_tests # broken / does not compile
	out/$_buildtype/wtf_unittests
	out/$_buildtype/zlib_unittests
}

package() {
	cd "$builddir"/out/$_buildtype

	mkdir -p "$pkgdir"/usr/bin

	# binaries
	install -Dm755 chrome -t "$pkgdir"/usr/lib/$pkgname/
	install -Dm4755 chrome_sandbox "$pkgdir"/usr/lib/$pkgname/chrome-sandbox
	install -Dm755 chrome_crashpad_handler -t "$pkgdir"/usr/lib/$pkgname/

	# chromedriver
	install -Dm755 chromedriver.unstripped "$pkgdir"/usr/lib/$pkgname/chromedriver
	ln -sf /usr/lib/$pkgname/chromedriver "$pkgdir"/usr/bin/chromedriver

	# resources
	install -Dm644 snapshot_blob.bin -t "$pkgdir"/usr/lib/$pkgname/
	install -Dm644 v8_context_snapshot.bin -t "$pkgdir"/usr/lib/$pkgname/
	if [ -f icudtl.dat ]; then
		install -Dm644 icudtl.dat -t "$pkgdir"/usr/lib/$pkgname/
	fi

	install -Dm755 xdg-mime -t "$pkgdir"/usr/lib/$pkgname/
	install -Dm755 xdg-settings -t "$pkgdir"/usr/lib/$pkgname/

	# Vulkan
	install -Dm755 libvulkan.so.1 -t "$pkgdir"/usr/lib/$pkgname/

	# Angle
	install -Dm755 libEGL.so -t "$pkgdir"/usr/lib/$pkgname/
	install -Dm755 libGLESv2.so -t "$pkgdir"/usr/lib/$pkgname/

	install -Dm755 "$srcdir"/chromium-launcher.sh \
		-t "$pkgdir"/usr/lib/$pkgname/

	cp -a MEIPreload "$pkgdir"/usr/lib/$pkgname/

	# It is important that we name the target "chromium-browser",
	# xdg-utils expect it; bug https://bugs.gentoo.org/355517
	mkdir -p "$pkgdir"/usr/bin
	ln -sf /usr/lib/$pkgname/chromium-launcher.sh "$pkgdir"/usr/bin/chromium-browser

	install -Dm644 "$srcdir"/chromium.conf \
		-t "$pkgdir"/etc/chromium/

	for pak in locales/*.pak *.pak; do
		install -Dm644 "$pak" "$pkgdir"/usr/lib/$pkgname/"$pak"
	done

	install -Dm755 libvk_swiftshader.so \
		-t "$pkgdir"/usr/lib/$pkgname/
	install -Dm755 vk_swiftshader_icd.json \
		-t "$pkgdir"/usr/lib/$pkgname/

	cd "$builddir"

	for size in 24 48 64 128 256; do
		install -Dm644 "chrome/app/theme/chromium/product_logo_$size.png" \
			"$pkgdir/usr/share/icons/hicolor/${size}x$size/apps/chromium.png"
	done

	for size in 16 32; do
		install -Dm644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size.png" \
			"$pkgdir/usr/share/icons/hicolor/${size}x$size/apps/chromium.png"
	done

	sed -i \
		-e 's/@@MENUNAME@@/Chromium/g' \
		-e 's/@@PACKAGE@@/chromium/g' \
		-e 's/@@USR_BIN_SYMLINK_NAME@@/chromium-browser/g' \
		chrome/app/resources/manpage.1.in \
		chrome/installer/linux/common/desktop.template

	sed -ni \
		-e 's/chromium-browser\.desktop/chromium.desktop/' \
		-e '/<update_contact>/d' \
		-e '/<p>/N;/<p>\n.*\(We invite\|Chromium supports Vorbis\)/,/<\/p>/d' \
		-e '/^<?xml/,$p' \
		chrome/installer/linux/common/chromium-browser/chromium-browser.appdata.xml

	install -Dm644 chrome/installer/linux/common/desktop.template \
		"$pkgdir"/usr/share/applications/chromium.desktop
	install -Dm644 chrome/app/resources/manpage.1.in \
		"$pkgdir"/usr/share/man/man1/chromium.1
	install -Dm644 chrome/installer/linux/common/chromium-browser/chromium-browser.appdata.xml \
		"$pkgdir"/usr/share/metainfo/chromium.appdata.xml
}

chromedriver() {
	pkgdesc="WebDriver driver for the Chromium Browser"
	depends="$pkgname=$pkgver-r$pkgrel"

	amove usr/lib/$pkgname/chromedriver \
		usr/bin/chromedriver
}

lang() {
	pkgdesc="Languages for package $pkgname"
	install_if="$pkgname=$pkgver-r$pkgrel lang"

	# Default to en-us and provide everything else through the chromium-lang package
	amove usr/lib/$pkgname/locales/*.pak

	mkdir -p "$pkgdir"/usr/lib/$pkgname/locales
	mv "$subpkgdir"/usr/lib/$pkgname/locales/en-US.pak \
		"$pkgdir"/usr/lib/$pkgname/locales/
}

swiftshader() {
	pkgdesc="Chromium web browser: CPU-based implementation of the Vulkan graphics API"
	depends="$pkgname-angle=$pkgver-r$pkgrel"

	amove usr/lib/$pkgname/libvk_swiftshader.so \
		usr/lib/$pkgname/vk_swiftshader_icd.json
}

sha512sums="
a5b569e1a019863cd27e03b7e834ecef284e170a41f8ff29b9d22101a45474b5157720e52e7f7438a217b8b00707bd3c414c83257c18f2d9f4d5ee46e2e06e9e  chromium-105.0.5195.102.tar.xz
f554ccc5d8a5c066634357878c89944cc591809ea6f6c6ef5b35e970e9674e0b3be8fddb06c0d333ddc65211fa09ae5e0b4b483ca70048156c29607c5487c017  test_fonts-cd96fc55dc243f6c6f4cb63ad117cad6cd48dceb.tar.gz
b9a810416dd7a8ffc3a5ced85ad9acebda1665bd08a57eec7b189698cc5f74d2c3fd69044e20fcb83297a43214b2772a1312b2c6122ea0eb716abacf39524d60  chromium-launcher.sh
9cfcb41d69c5a515b6f9fe2a629579fa499e1f48eb58a0ce4ec8e5029d450bcafb6d963019aaac9a6838244bee9f9ba7fe5ef6146a0ca6b20fcda4ab7f059476  chromium.conf
2d8237a940ea691bd10b08315429677a587f7ef9692a0cca53bfd066eae82998a6c71f402a8669e9de39f94d7f3280745d1628ea6eac5d76ca7116844d4e0dac  google-api.keys
f19ba0c0f542115e6f53019659df256471e811a23d2f37569c9d4dfa265c0c1ace3e62c74d7507f82e6b7b4152c704e651810a00616f8f531592b14bb2af01d9  angle-wayland-include.patch
252b37a2ecc5e7a25385943045f426dc2e30991b28d206ceaff1be7fd8ffeeb024310a8fca6b3e69a4b1c57db535d51c570935351053525f393682d5ecd0f9a9  canonicalize-file-name.patch
e193e8361d7b44d82805bb092b96df58f287b5dec071ea1853dec836d02f5a4089b5b182259d16f424b2798e1bad5c3242f303061fbd5be28a0e5cf0ebdffd4a  chromium-105-math-ceilf.patch
e51f2c47425e3c26a3e0d4b63484ebcc74969778fc67c490430833c20e72388590caafae3f2ef08935dd6b8dff7ac06ac0cfea9347fae97b166b2bd34fcbd0f3  chromium-105-bitmap-include.patch
5c6d4ae73a2eda52275467959e316e2826443cd12af380c4568f52323f885786544bcd208028670fae8d3d1118be256bc94659213768dfb152440ad969f68a18  chromium-105-browser-include.patch
ac0a80174f95d733f33ddc06fc88cdcf7db0973378c28d8544dc9c19e2dabeac47f91c99b3e7384f650b3405554a9e222543f0860b6acc407c078a8c9180d727  chromium-VirtualCursor-standard-layout.patch
c4654d5b23c6f5d9502507e534fe1951d6749c62251e49b6adfe10d1569431e7f7a5a6fa5ff09ec30984415ced27a5e20985df8c91295de34af3c84557fa5b91  chromium-revert-drop-of-system-java.patch
904f9b145f64f18930a2f482b8fa8516126c994ee5a971e3cd38869327641efaa369f63427c043745b152ad272102d68e3ea66b5c64fef060e339c9e58c30ad5  chromium-use-alpine-target.patch
274858323d040ac8c51bac90b6ef91bb075d7b8d92d73952ed700c10a8bae2c2115fb2a9cc6912de79be226c141d7106839fc3486e22c0206e75cb6d8ff65ee6  credentials-sys-types-header.patch
22da17c649ae9845d6a174187f2b666245a10db8a997169fc214c430fbba10143cfb57f8f6ece5acf856cd9ea09f293a1aca90cdf3e64fd9423b78beac53f517  default-pthread-stacksize.patch
cd7719c30518aeb659e9b7dc126241f897afe1a231e601271b63ba170e811a93b514c4d2a77680cdf0c846f81fa6db766ac619aa200efb32cbdfff6732a63893  dns-resolver.patch
9d1edb1e0624ee61825e3af23fbb8c5dbc09d2b92d7769d19f8ca618edae8de8a3e051fedf4ad92c230e1373dc8495922c46971aef93a580c04ad80bc33516c0  fix-crashpad.patch
8bebf4a9d5225c6e47edc5b07c4b97be24a45cc221f49632836915ceeb4ecb69b7f79a31ea7f82171cde3443f45fec541f409892542cf1014e81aa6acd01566d  fix-missing-cstdint-include-musl.patch
efe97b9dd2ec5965fa0cdf1b2a3c01253835c2df710da7ea105c4ce008c11f9caaf8b4321736a2b91f06d8d61972c08e225b16509dc05176a2c39337688ad5b9  fix-narrowing-cast.patch
82f2bd4aa613e792d3af6e7a8632e0920cf48504a7572fb97d5480ea182fa125fe526e7df1ce4311b5d139a3f78da0f0b54605fbd09d7cd43135906a7639e47f  gdbinit.patch
1e004d2390a8031125345d39a98e03aab7fa5120317b632cfb250f705bd2983292f41e9c29637b2ea284d095b5747ac2d9664bf0a309e13967283b505f134a29  lto-core-count.patch
63e5b25c49af484964b3ac723da1c2f348812572a2e24ad412d2fb9eb7eec9ddc0e76568e76d1f352cdc562bc5003c93e04ee519a82e8568f48484d1682e237f  memory-tagging-arm64.patch
e5c8a31abcf6b73fd67bd27537391a5b52e5561f2ff986ca246b66a4938b2f9a646871b781de49f299ce729b59de6855b1b3308bbb03c50498a9d1552e94f6a8  musl-sandbox.patch
a018cf58b9e34f73d588961f2f9a36de67267060fb2e77ebc562974c6c92a59009161e374cf9bbdc35e8bf1a7e90f0b90117a0d494dcd2e2bb2f5e6534925d0b  musl-tid-caching.patch
556cc2ba28184a75745f13c673605327f5be590be179eb3f941dc0abded854a814e5da1432a28fb8d4dcdcd66ffd4c94ee1a8824d2cd93b632f48e9310dbc3fa  musl-v8-monotonic-pthread-cont_timedwait.patch
3f90f888f015efd04636eee0e8431d41e073d432563553298d7b8be7650c397eb7d43a5bf682df1f66ffd7182852d4b836adb7dcd934f9b45247cdd99046e45c  no-execinfo.patch
caf9c4e4533b94dfe6b28350f8ea9654311b684dfd0c5ba768ab14775e0164f577dfd356cd507bcad9f378ec2c180c8e6edbde9bba62caf70fbac5a642edc61b  no-glibc-version.patch
86a75fd53f5fc0c7a0b1ea73bbc0a6966464f613c8c410684cc25e5eee09482490aece8d2925bcece2489e1e3c1d70c659c6b6220119d7d546bf651864258a3e  no-mallinfo.patch
3319fa42bd582679f449151de5905c582e156cf8dff850326cfbd7a97c92afea0b074ff1275e1ec923ed1491db2adec632d4222fed0f7f1c6607aee930ec9559  no-res-ninit-nclose.patch
0c0d3ed0a8f2bcecb2bf4eb56130fcd71031bb63744fb56e1b5a6b9dfbe16680607ff592e24602fe045b819509a70556e240b6fe0e876710977d60185f682df4  no-stat-redefine.patch
ad563e29ac7d83c203f5af966c4ed3ebdeb5c997835a45fb28ecde08dde5231d0a775fb413f44867af28724504c42316b27d5a6aaa602057642dcbdf7ec20a7a  partition-atfork.patch
36f8b96a8143355b7855a248473206c16101616d46978773c8fad92757bb24f60f23d843a25c219efe4b0a957f43aa7ea5ce5867b29228ef7371d1b886e528da  push-back-nullptr.patch
d315ef36952f35f834742a063b11b312b3adc2b86fc34a73a6906652f4042e6537789aeae5aade3c60523a80eac8d9751eecac3716831b99a2f8725d4ce50df3  quiche-arena-size.patch
128ec0fd14349e065c8bb0910d53cbea7423182a06e06f7b7765f3cba1e5ba5e7a8bccbcdab079335b5235abb7bf0d46dee21ecc8c221be7e1c5c6d9795f958e  roll-src-third_party-ffmpeg.patch
9c44875bcc5dd5431226568ba52d225f086b321325371d9e9e01d1fd892049e5aff324a89ba8268f32c59ce1a47e0b0d5448c9162a45ee5a60a58eecb69ca788  scoped-file-no-close.patch
4c9e08a0120505eb14b4cb4e1f262cb1726a2dc260a0dba299b03a7d73e4accfc38700d6583036d98473d857792e58805a2b276090b0dca6afd0b0e61f0c197f  system-zlib.patch
ece751cd29d28772dd0955c84f5553a6858ac24d06ccb66ac75fcfc6b13460cf5c1f27392c094487e20e08e621d2099c3b5cc9a2a819a458e8c56c78fea11269  temp-failure-retry.patch
1d4e8c6e65205e6b72af47b9a2fa6f96aaada9b7d5a74f4e11a345a885df3078b523d02aaf8e9dac3aa30d72bbbd07cd6dc7edcf44fb9ae57a7f81251c398f65  wtf-stacksize.patch
"
