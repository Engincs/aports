diff -ruN a/sources/common_test.go b/sources/common_test.go
--- a/sources/common_test.go	2025-04-03 20:45:57.000000000 +0000
+++ b/sources/common_test.go	2025-10-11 03:39:54.410000000 +0000
@@ -25,6 +25,19 @@
 	keys := []string{"0x5DE8949A899C8D99"}
 	keyserver := "keyserver.ubuntu.com"
 
+	// Use a fallback keyserver if the first one fails
+	var ok bool
+	ok, err = recvGPGKeys(context.TODO(), os.TempDir(), keyserver, keys)
+	if !ok {
+		keyserver = "keys.gnupg.net"
+		log.Printf("%s\nUsing fallback keyserver: %s", err, keyserver)
+
+		ok, err = recvGPGKeys(context.TODO(), os.TempDir(), keyserver, keys)
+		if !ok {
+			log.Printf("%s\nThe test may fail.", err)
+		}
+	}
+
 	tests := []struct {
 		name          string
 		signedFile    string
@@ -124,6 +137,20 @@
 		ctx: context.TODO(),
 	}
 
+	// Use a fallback keyserver if the first one fails
+	var ok bool
+	var err error
+	ok, err = recvGPGKeys(c.ctx, c.sourcesDir, c.definition.Source.Keyserver, c.definition.Source.Keys)
+	if !ok {
+		c.definition.Source.Keyserver = "keys.gnupg.net"
+		log.Printf("%s\nUsing fallback keyserver: %s", err, c.definition.Source.Keyserver)
+
+		ok, err = recvGPGKeys(c.ctx, c.sourcesDir, c.definition.Source.Keyserver, c.definition.Source.Keys)
+		if !ok {
+			log.Printf("%s\nThe test may fail.", err)
+		}
+	}
+
 	keyring, err := c.CreateGPGKeyring()
 	require.NoError(t, err)
 
