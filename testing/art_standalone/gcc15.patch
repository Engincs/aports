Patch-Source: https://gitlab.com/android_translation_layer/art_standalone/-/commit/0fc8d75d8fddabaaadab3707fd610a380d1acc28
From 0fc8d75d8fddabaaadab3707fd610a380d1acc28 Mon Sep 17 00:00:00 2001
From: Mis012 <Michael.Srba@seznam.cz>
Date: Sat, 21 Jun 2025 12:31:31 +0200
Subject: [PATCH] art, libcutils: fix compilation errors on gcc15

---
 art/libelffile/elf/xz_utils.h       | 1 +
 art/runtime/dex_to_dex_decompiler.h | 2 ++
 art/runtime/runtime.cc              | 8 +++++++-
 system/core/libcutils/trace-dev.c   | 4 ++--
 system/core/libcutils/trace-host.c  | 2 +-
 5 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/art/libelffile/elf/xz_utils.h b/art/libelffile/elf/xz_utils.h
index df5cb56f2..8b97f1d30 100644
--- a/art/libelffile/elf/xz_utils.h
+++ b/art/libelffile/elf/xz_utils.h
@@ -17,6 +17,7 @@
 #ifndef ART_LIBELFFILE_ELF_XZ_UTILS_H_
 #define ART_LIBELFFILE_ELF_XZ_UTILS_H_
 
+#include <cstdint>
 #include <vector>
 
 #include "base/array_ref.h"
diff --git a/art/runtime/dex_to_dex_decompiler.h b/art/runtime/dex_to_dex_decompiler.h
index 4b6b0f707..aeaaa8282 100644
--- a/art/runtime/dex_to_dex_decompiler.h
+++ b/art/runtime/dex_to_dex_decompiler.h
@@ -17,6 +17,8 @@
 #ifndef ART_RUNTIME_DEX_TO_DEX_DECOMPILER_H_
 #define ART_RUNTIME_DEX_TO_DEX_DECOMPILER_H_
 
+#include <cstdint>
+
 #include "base/array_ref.h"
 
 namespace art {
diff --git a/art/runtime/runtime.cc b/art/runtime/runtime.cc
index 0dfc5043b..1ea93dc14 100644
--- a/art/runtime/runtime.cc
+++ b/art/runtime/runtime.cc
@@ -180,6 +180,11 @@
 
 extern "C" NO_INLINE __attribute__((visibility("default"))) void art_sigsegv_fault();
 
+#ifndef __APPLE__
+// this must be outside any namespace
+extern "C" char** environ;
+#endif
+
 namespace art {
 
 // If a signal isn't handled properly, enable a handler that attempts to dump the Java stack.
@@ -218,7 +223,8 @@ inline char** GetEnviron() {
 #else
 // Some POSIX platforms expect you to declare environ. extern "C" makes
 // it reside in the global namespace.
-extern "C" char** environ;
+// NOTE: this was moved outside the namespace because gcc15 seems to disagree with the above
+//extern "C" char** environ;
 inline char** GetEnviron() { return environ; }
 #endif
 
diff --git a/system/core/libcutils/trace-dev.c b/system/core/libcutils/trace-dev.c
index a06987ec0..a44faa82f 100644
--- a/system/core/libcutils/trace-dev.c
+++ b/system/core/libcutils/trace-dev.c
@@ -37,11 +37,11 @@
  */
 #define ATRACE_MESSAGE_LENGTH 1024
 
-atomic_bool             atrace_is_ready      = ATOMIC_VAR_INIT(false);
+atomic_bool             atrace_is_ready      = false;
 int                     atrace_marker_fd     = -1;
 uint64_t                atrace_enabled_tags  = ATRACE_TAG_NOT_READY;
 static bool             atrace_is_debuggable = false;
-static atomic_bool      atrace_is_enabled    = ATOMIC_VAR_INIT(true);
+static atomic_bool      atrace_is_enabled    = true;
 static pthread_once_t   atrace_once_control  = PTHREAD_ONCE_INIT;
 static pthread_mutex_t  atrace_tags_mutex    = PTHREAD_MUTEX_INITIALIZER;
 
diff --git a/system/core/libcutils/trace-host.c b/system/core/libcutils/trace-host.c
index 6478e3e52..872ee1413 100644
--- a/system/core/libcutils/trace-host.c
+++ b/system/core/libcutils/trace-host.c
@@ -20,7 +20,7 @@
 #define __unused __attribute__((__unused__))
 #endif
 
-atomic_bool             atrace_is_ready      = ATOMIC_VAR_INIT(true);
+atomic_bool             atrace_is_ready      = true;
 int                     atrace_marker_fd     = -1;
 uint64_t                atrace_enabled_tags  = 0;
 
-- 
GitLab

